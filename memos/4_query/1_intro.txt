--------------------------------------------------------

일단 fetch에서 graphql-request로 갈아타고,
ApolloClient로 넘어가자

> yarn add graphql-request graphql

--------------------------------------------------------

import { GraphQLClient, gql } from 'graphql-request';

const client = new GraphQLClient('http://localhost:9000/graphql');

export async function getJobs() {
  const query = gql`
    query Job {
      jobs {
        id
        date
        title
        company {
          id
          name
        }
      }
    }
  `;
  const { jobs } = await client.request(query);

  return jobs;
}

--------------------------------------------------------

query arguments
=> 쿼리에 인자를 지정

// 서버측 타입정의
type Query {
  job(id: ID!): Job
}

// 서버측 리졸버
export const resolvers = {
  Query: {
    job: async (_, args) => {
      return getJob(args.id);
    },
  },

  Job: {
    date: (job) => toIsoDate(job.createdAt),
    company: (job) => getCompany(job.companyId),
  },
};

// 쿼리 호출
query JobById {
  job(id: "f3YzmnBZpK0o") {
    id
    title
    description
  }
}

--------------------------------------------------------

operationName 우측에 괄호를 이용해 
query variables를 정의

query JobById($id: ID!) {
  job(id: $id) {
    id
    date
    title
    description
    company {
      id
      name
    }
  }
}


export async function getJob(jobId) {
  const query = gql`
    query JobById($id: ID!) {
      job(id: $id) {
        id
        date
        title
        description
        company {
          id
          name
        }
      }
    }
  `;
  const { job } = await client.request(query, {
    id: jobId,
  });

  return job;
}

--------------------------------------------------------